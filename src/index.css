@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  body {
    @apply bg-gray-900 text-gray-100;
  }
}

@layer components {
  .glass-card {
    @apply bg-gray-800/50 backdrop-blur-lg border border-purple-500/20 rounded-xl;
  }
  
  .neon-glow {
    @apply hover:shadow-[0_0_15px_rgba(168,85,247,0.5)] transition-shadow duration-300;
  }
  
  .section-fade-in {
    @apply opacity-0 translate-y-4 transition-all duration-700;
  }
  
  .section-fade-in.visible {
    @apply opacity-100 translate-y-0;
  }

  .grain {
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    @apply opacity-[0.15] pointer-events-none fixed inset-0 z-50 mix-blend-overlay;
  }

  .glitch {
    position: relative;
  }

  .glitch::before,
  .glitch::after {
    content: attr(data-text);
    @apply absolute inset-0 opacity-0 transition-opacity duration-150;
  }

  .glitch:hover::before {
    @apply opacity-100 text-purple-400 -translate-x-1;
    clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
    transform: translate(-0.025em, -0.0125em);
    animation: glitch 650ms infinite;
  }

  .glitch:hover::after {
    @apply opacity-100 text-pink-400 translate-x-1;
    clip-path: polygon(0 80%, 100% 20%, 100% 100%, 0 100%);
    transform: translate(0.025em, 0.0125em);
    animation: glitch 375ms infinite;
  }
}

@keyframes glitch {
  0% {
    transform: translate(0);
  }
  20% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
  100% {
    transform: translate(0);
  }
}

.typewriter {
  overflow: hidden;
  border-right: 2px solid #a855f7;
  white-space: nowrap;
  animation: typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

@keyframes blink-caret {
  from, to { border-color: transparent }
  50% { border-color: #a855f7 }
}

.racing-lights {
  position: relative;
  overflow: hidden;
}

.racing-lights::before {
  content: '';
  @apply absolute inset-0 bg-gradient-to-r from-transparent via-purple-500/20 to-transparent;
  transform: translateX(-100%);
  animation: racing-lights 3s linear infinite;
}

@keyframes racing-lights {
  100% {
    transform: translateX(200%);
  }
}

.hover-3d {
  transition: transform 0.2s ease;
  transform-style: preserve-3d;
  perspective: 1000px;
}

.hover-3d:hover {
  transform: rotateY(10deg) rotateX(5deg);
}